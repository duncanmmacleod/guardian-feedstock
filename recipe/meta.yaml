{% set name = "guardian" %}
{% set version = "1.4.4" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://git.ligo.org/cds/{{ name }}/-/archive/{{ version }}/{{ name }}-{{ version }}.tar.gz
  sha256: e17db721090203321f1ce83e9af7632c5b4a3229bbb4270bb285bc9fc502ba88
  patches:
    # replace most of the scripts with entry points
    - entry-points.patch
    # insert the anaconda1 prefix placeholder into the guardlog script
    - guardlog-prefix.patch  # [not win]
    # don't install guardlog at all on windows (it won't work)
    - no-guardlog.patch  # [win]
    # patch interpreter for tests
    - test-environment.patch

build:
  entry_points:
    - guardian = guardian.__main__:main
    - guardmedm = guardian.medm.__main__:main
    - guardutil = guardian.guardutil:main
    - guardctrl = guardctrl.__main__:main
  number: 1
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - python
    - setuptools
  run:
    - gpstime
    - matplotlib-base
    - networkx
    - numpy
    - pcaspy
    - pydotplus
    - pyepics
    - python
    - python-dateutil
    - setproctitle
    - termcolor

test:
  requires:
    - bash >=4.0
    - ezca
  source_files:
    - test/
  commands:
    - bash test/guardian-test

about:
  home: https://git.ligo.org/cds/guardian/
  dev_url: https://git.ligo.org/cds/guardian/
  doc_url: https://docs.ligo.org/cds/guardian/
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: COPYING-GPL-3
  summary: aLIGO Guardian
  description: |
    Design by and for the Advanced LIGO project, Guardian is a flexible,
    modular, distributed, hierarchical, state machine automation platform.
    It is not specific to aLIGO, though; it should be useful for an large
    or small experiment that could benefit from state-machine supervisory
    control.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - jrollins
